spring:
  application:
    name: j-sso
  security:
    oauth2:
      authorizationserver:
        issuer-url: http://localhost:8080
        introspection-endpoint: /oauth2/token-info
      client:
        registration:
          github:
            client-name: github
            client-id: 43794d53ae6c719cfa3d
            client-secret: 5c7ea6108598e249b56dc9784e31c4b05b542d98
          google:
            client-name: google
            clientId: 574812042094-qjpjr93sr0eg4ha6q1l3qia0bcvsa4dj.apps.googleusercontent.com
            clientSecret: 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
            authorization-grant-type: authorization_code
          yandex:
            client-name: yandex
            client-id: ee1bdcc325294d8a915db0ede6911b85
            client-secret: 0598eae2d4b1495f9b0b7d5923b11913
            authorization-grant-type: authorization_code
            provider: yandex
            redirect-uri: http://localhost:8080/login/oauth2/code/yandex
        provider:
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-name-attribute: default_email
            userInfoUri: https://login.yandex.ru/info

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/master.yaml

logging:
  level:
    "liquibase" : error
---
spring:
  config:
    activate:
      on-profile: development

  jpa:
    show-sql: true
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect

  datasource:
    url: jdbc:h2:file:./sorface-sso;AUTO_SERVER=TRUE
    username: sa
    password: sa
    driver-class-name: org.h2.Driver

logging:
  level:
    org.springframework.security.oauth2: debug
    com.zaxxer.hikari: warn
---
spring:
  config:
    activate:
      on-profile: production

  jpa:
    show-sql: true
    database: postgresql

  datasource:
    driver-class-name: org.postgresql.Driver
    url:
    username: sa
    password: sa