name: yc.docker.image builder [wc] [release]

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      release-tag:
        required: true
        type: string
      OAUTH_CLIENT_TWITCH_REDIRECT_URL:
        required: true
        type: string
      OAUTH_CLIENT_YANDEX_REDIRECT_URL:
        required: true
        type: string
      OAUTH_SERVER_ISSUER_URL:
        required: true
        type: string
      REDIS_HOST:
        required: true
        type: string

    secrets:
      YC_ACCOUNT:
        required: true
      DATABASE_PASSWORD:
        required: true
      DATABASE_URL:
        required: true
      DATABASE_USERNAME:
        required: true
      MAIL_NOTIFICATOR_PASSWORD:
        required: true
      MAIL_NOTIFICATOR_USERNAME:
        required: true
      OAUTH_CLIENT_GITHUB_ID:
        required: true
      OAUTH_CLIENT_GITHUB_SECRET:
        required: true
      OAUTH_CLIENT_GOOGLE_ID:
        required: true
      OAUTH_CLIENT_GOOGLE_SECRET:
        required: true
      OAUTH_CLIENT_TWITCH_ID:
        required: true
      OAUTH_CLIENT_TWITCH_SECRET:
        required: true
      OAUTH_CLIENT_YANDEX_ID:
        required: true
      OAUTH_CLIENT_YANDEX_SECRET:
        required: true
      REDIS_PASSWORD:
        required: true
      REDIS_USERNAME:
        required: true

jobs:
  docker-backend-release:
    name: Build docker image for backend

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master

      - name: Build application.properties
        env:
          SSO_APPLICATION_PROPERTIES: ${{ secrets.SSO_APPLICATION_PROPERTIES }}
        run: |
          echo $SSO_APPLICATION_PROPERTIES | base64 --decode > docker/.docker.sso.env
          cat docker/.docker.sso.env

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_ACCOUNT }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crp32rkjbqn6qnm9jshk
          CR_REPO: ${{ inputs.name }}
          IMAGE_TAG: ${{ inputs.release-tag }}

          OAUTH_CLIENT_TWITCH_REDIRECT_URL: ${{ inputs.OAUTH_CLIENT_TWITCH_REDIRECT_URL }}
          OAUTH_CLIENT_YANDEX_REDIRECT_URL: ${{ inputs.OAUTH_CLIENT_YANDEX_REDIRECT_URL }}
          OAUTH_SERVER_ISSUER_URL: ${{ inputs.OAUTH_SERVER_ISSUER_URL }}
          REDIS_HOST: ${{ inputs.REDIS_HOST }}

          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          MAIL_NOTIFICATOR_PASSWORD: ${{ secrets.MAIL_NOTIFICATOR_PASSWORD }}
          MAIL_NOTIFICATOR_USERNAME: ${{ secrets.MAIL_NOTIFICATOR_USERNAME }}
          OAUTH_CLIENT_GITHUB_ID: ${{ secrets.OAUTH_CLIENT_GITHUB_ID }}
          OAUTH_CLIENT_GITHUB_SECRET: ${{ secrets.OAUTH_CLIENT_GITHUB_SECRET }}
          OAUTH_CLIENT_GOOGLE_ID: ${{ secrets.OAUTH_CLIENT_GOOGLE_ID }}
          OAUTH_CLIENT_GOOGLE_SECRET: ${{ secrets.OAUTH_CLIENT_GOOGLE_SECRET }}
          OAUTH_CLIENT_TWITCH_ID: ${{ secrets.OAUTH_CLIENT_TWITCH_ID }}
          OAUTH_CLIENT_TWITCH_SECRET: ${{ secrets.OAUTH_CLIENT_TWITCH_SECRET }}
          OAUTH_CLIENT_YANDEX_ID: ${{ secrets.OAUTH_CLIENT_YANDEX_ID }}
          OAUTH_CLIENT_YANDEX_SECRET: ${{ secrets.OAUTH_CLIENT_YANDEX_SECRET }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
        run: |
          docker build -f docker/sso/Dockerfile --build-arg REACT_APP_BACKEND_URL=$OAUTH_SERVER_ISSUER_URL --build-arg REACT_APP_VERSION=$IMAGE_TAG  --build-arg OAUTH_CLIENT_TWITCH_REDIRECT_URL=$OAUTH_CLIENT_TWITCH_REDIRECT_URL --build-arg OAUTH_CLIENT_YANDEX_REDIRECT_URL=$OAUTH_CLIENT_YANDEX_REDIRECT_URL --build-arg OAUTH_SERVER_ISSUER_URL=$OAUTH_SERVER_ISSUER_URL --build-arg REDIS_HOST=$REDIS_HOST --build-arg DATABASE_PASSWORD=$DATABASE_PASSWORD --build-arg DATABASE_URL=$DATABASE_URL --build-arg DATABASE_USERNAME=$DATABASE_USERNAME --build-arg MAIL_NOTIFICATOR_PASSWORD=$MAIL_NOTIFICATOR_PASSWORD --build-arg MAIL_NOTIFICATOR_USERNAME=$MAIL_NOTIFICATOR_USERNAME --build-arg OAUTH_CLIENT_GITHUB_ID=$OAUTH_CLIENT_GITHUB_ID --build-arg OAUTH_CLIENT_GITHUB_SECRET=$OAUTH_CLIENT_GITHUB_SECRET --build-arg OAUTH_CLIENT_GOOGLE_ID=$OAUTH_CLIENT_GOOGLE_ID --build-arg OAUTH_CLIENT_TWITCH_ID=$OAUTH_CLIENT_TWITCH_ID --build-arg OAUTH_CLIENT_TWITCH_SECRET=$OAUTH_CLIENT_TWITCH_SECRET --build-arg OAUTH_CLIENT_YANDEX_ID=$OAUTH_CLIENT_YANDEX_ID --build-arg OAUTH_CLIENT_YANDEX_SECRET=$OAUTH_CLIENT_YANDEX_SECRET --build-arg REDIS_PASSWORD=$REDIS_PASSWORD --build-arg REDIS_USERNAME=$REDIS_USERNAME -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG
